Resources:
  CognitoUserPool:
    Type: AWS::Cognito::UserPool
    Properties:
      UserPoolName: event-signup-cognito-pool-dev
      AutoVerifiedAttributes:
        - email
      AccountRecoverySetting:
        RecoveryMechanisms:
          - Name: verified_email
            Priority: 1
      DeletionProtection: ACTIVE
      Schema:
        - Name: nickname
          Required: true
        - Name: picture
          Required: true
        - Name: email
          Required: true
      Policies:
        PasswordPolicy:
          MinimumLength: 8
          RequireUppercase: true
          RequireLowercase: true
          RequireNumbers: true
          RequireSymbols: true
          TemporaryPasswordValidityDays: 7
      UsernameAttributes:
        - email
      UsernameConfiguration:
        CaseSensitive: false

  CognitoUserPoolClient:
    Type: AWS::Cognito::UserPoolClient
    Properties:
      ClientName: event-signup-cognito-client-dev
      UserPoolId:
        Ref: CognitoUserPool
      ExplicitAuthFlows:
        - ALLOW_ADMIN_USER_PASSWORD_AUTH
        - ALLOW_CUSTOM_AUTH
        - ALLOW_REFRESH_TOKEN_AUTH
        - ALLOW_USER_PASSWORD_AUTH
        - ALLOW_USER_SRP_AUTH
      IdTokenValidity: 60
      AccessTokenValidity: 60
      RefreshTokenValidity: 30
      TokenValidityUnits:
        AccessToken: minutes
        IdToken: minutes
        RefreshToken: days
      ReadAttributes:
        - email
        - nickname
        - picture
      WriteAttributes:
        - email
        - nickname
        - picture
      AllowedOAuthFlows:
        - code
      AllowedOAuthScopes:
        - openid
        - profile
        - email
        - aws.cognito.signin.user.admin
      CallbackURLs:
        - https://d3da3lb7bhwbo0.cloudfront.net
        - http://localhost:5173
        - https://xn--hppening-0za.com
      LogoutURLs:
        - https://d3da3lb7bhwbo0.cloudfront.net
        - http://localhost:5173
        - https://xn--hppening-0za.com
      SupportedIdentityProviders:
        - COGNITO
        - Google

  CognitoUserPoolDomain:
    Type: AWS::Cognito::UserPoolDomain
    Properties:
      Domain: event-signup
      UserPoolId:
        Ref: CognitoUserPool

  CognitoIdentityProviderGoogle:
    Type: AWS::Cognito::UserPoolIdentityProvider
    Properties:
      ProviderName: Google
      UserPoolId:
        Ref: CognitoUserPool
      ProviderType: Google
      AttributeMapping:
        email: email
        nickname: name
        picture: picture
        username: sub
      ProviderDetails:
        client_id: 13411276300-h1a45gn9qt4c3g64apsc4vl8pbov5t6o.apps.googleusercontent.com
        client_secret: !Ref GoogleClientSecret
        authorize_scopes: "openid profile email"

Parameters:
  GoogleClientSecret:
    Type: String
    Description: The client secret for Google OAuth
