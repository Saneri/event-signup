AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: SAM Template for backend

Globals:
  Function:
    Timeout: 29
    Runtime: nodejs20.x
    Environment:
      Variables:
        MOCK_AUTH: !Ref MockAuth
        ENV: !Ref Env

Parameters:
  Env:
    Type: String
    Default: prod
  MockAuth:
    Type: String
    Default: ""

Resources:
  Api:
    Type: AWS::Serverless::Api
    Properties:
      StageName: dev
      Cors:
        AllowMethods: "'GET,POST,PUT,OPTIONS'"
        AllowHeaders: "'Content-Type,X-Api-Key,Authorization'"
        AllowOrigin: "'*'" # make this more strict
  ApiUsagePlan:
    Type: "AWS::ApiGateway::UsagePlan"
    Properties:
      ApiStages:
        - ApiId: !Ref Api
          Stage: dev
      Description: !Sub ${AWS::StackName} usage plan
      Quota:
        Limit: 1000
        Period: MONTH
      UsagePlanName: !Sub ${AWS::StackName}-usage-plan
  getEvents:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: event-signup-backend-getEvents-dev
      CodeUri: src/
      Handler: handler.eventsGetAllHandler
      Architectures:
        - x86_64
      Events:
        ApiEvent:
          Type: Api
          Properties:
            RestApiId: !Ref Api
            Path: /events
            Method: get
      Policies:
        - Statement:
            - Sid: dynamoGetAllEventsPolicy
              Effect: Allow
              Action:
                - dynamodb:Scan
                - dynamodb:Query
                - dynamodb:BatchGetItem
              Resource: "*"
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: "es2020"
        Sourcemap: true
        EntryPoints:
          - handler.ts
  getEventById:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: event-signup-backend-getEventById-dev
      CodeUri: src/
      Handler: handler.eventsGetByIdHandler
      Architectures:
        - x86_64
      Events:
        ApiEvent:
          Type: Api
          Properties:
            RestApiId: !Ref Api
            Path: /events/{id}
            Method: get
      Policies:
        - Statement:
            - Sid: dynamoGetAllEventsPolicy
              Effect: Allow
              Action:
                - dynamodb:GetItem
              Resource: "*"
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: "es2020"
        Sourcemap: true
        EntryPoints:
          - handler.ts

  addEvent:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: event-signup-backend-postEvents-dev
      CodeUri: src/
      Handler: handler.eventsPostHandler
      Architectures:
        - x86_64
      Events:
        ApiEvent:
          Type: Api
          Properties:
            RestApiId: !Ref Api
            Path: /events
            Method: post
      Policies:
        - Statement:
            - Sid: dynamoPostEventsPolicy
              Effect: Allow
              Action:
                - dynamodb:PutItem
              Resource: "*"
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: "es2020"
        Sourcemap: true
        EntryPoints:
          - handler.ts
  getAllAttendees:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: event-signup-backend-getAttendees-dev
      CodeUri: src/
      Handler: handler.attendeesGetAllHandler
      Architectures:
        - x86_64
      Events:
        ApiEvent:
          Type: Api
          Properties:
            RestApiId: !Ref Api
            Path: /attendees/{id}
            Method: get
      Policies:
        - Statement:
            - Sid: dynamoPostEventsPolicy
              Effect: Allow
              Action:
                - dynamodb:Scan
                - dynamodb:Query
              Resource: "*"
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: "es2020"
        Sourcemap: true
        EntryPoints:
          - handler.ts

  putAttendees:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: event-signup-backend-putAttendees-dev
      CodeUri: src/
      Handler: handler.attendeesPutHandler
      Architectures:
        - x86_64
      Events:
        ApiEvent:
          Type: Api
          Properties:
            RestApiId: !Ref Api
            Path: /attendees/{id}
            Method: put
      Policies:
        - Statement:
            - Sid: dynamoGetAllEventsPolicy
              Effect: Allow
              Action:
                - dynamodb:UpdateItem
                - dynamodb:PutItem
              Resource: "*"
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: "es2020"
        Sourcemap: true
        EntryPoints:
          - handler.ts
